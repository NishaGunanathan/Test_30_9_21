InternalClassType: Method
Coordinate3D: [16.85,-7.45,0]
Name: EventSink
Origin: 5ae5800c-dfab-47ad-aedc-4711f1a601a2
Program: |+1
 -- callback of the remote process
 -- event treatment: end of simulation,_timeout, messageBox on the remote machine
 -- ErrorHandler
 /* Attention: If you use Debugger > StopOnControls or Debugger > StopOnSubRoutines the eventSink_method
 shows the messages at the end and not at the correct time.
 */
 param id:integer, p1:any -- p1 text of message, in general.
 
 if JobId = -1
 	return
 end
 var EvCtrlStr:string := to_str(rootframe,".eventController")
 
 var row:integer := MachineIndex
 var machTab:object := ~.MachinesTable
 if id = 1 	-- Simulation ended (p1 = VOID)
 	-- "The simulation was ended as expected and is ready for evaluation."
 	machTab.addLogging("The simulation was ended as expected and is ready for evaluation.", JobId, MachineIndex, false)
 
 	var infoStr:string := "ready for evaluation"	-- job status
 	-- if machTab[10,row] = infoStr then return end
 	machTab[10,row] := infoStr	-- job status
 
 	var t:time := sysdate - startDateTime
 	/*machTab[16,row] += t -- measure the simulation running time
 	machTab[15,row] += 1 -- counter simulation runs*/
 
 	var eMPlant:any := getInterfaceOfRemoteProcess(eMPlantHandle)
 	~.~.M_ReadResult(eMPlant,JobId, row) -- code depends of the wizard (Experimentmanager or GAwizard)
 
 	eMPlant.StopSimulation--(EvCtrlStr) -- Plant Simulation does not generate new events.
 
 	machTab[9,row] := -1
 	machTab[10,row] := "idle"
 	JobId := -1
 	&RunProcess.executeNewCallChain
 
 elseif id = 2
 	-- Catch an error by the ErrorHandling on the remote machine.
 	-- The message is sent by 'fireSimTalkMessage' and recognized by the string "Unknown error".
 
 	machTab.addLogging(to_str("'",p1,"' job ",JobId), JobId, MachineIndex, true)
 	if strLpos("Unknown error",to_str(p1)) = 1
 		machTab[10,row] := "Cancelled simulation"-- catched by the Global Error Handler
 		~.~.Recording.remoteErrors := true -- shows message "An error occurred on a remote computer."
 		~.~.Recording.append(to_str(p1))
 		~.~.Recording.localErrors += 1
 		eMPlant := getInterfaceOfRemoteProcess(eMPlantHandle)
 		--eMPlant.StopSimulation -- (EvCtrlStr) -- Plant Simulation does not generate new events.
 
 		if JobId > 0
 			t := sysdate - startDateTime
 			machTab[16,row] += t -- measure the simulation running time
 			machTab[15,row] += 1 -- counter simulation runs
 			~.~.M_TreatError(JobId,to_str(p1))  -- The observation of the JobId is canceled.
 		end
 		machTab[9,row] := -1
 		machTab[10,row] := "idle"
 		JobId := -1
 
 		eMPlant.ResetSimulation(EvCtrlStr) -- Plant Simulation generates the first events.
 
 		&RunProcess.executeNewCallChain
 	else
 		var MessStr:string := to_str("Message (id=2): ",p1)
 		machTab.addLogging(MessStr, JobId, MachineIndex, true)
 		~.~.Recording.append(MessStr)
 	end
 
 elseif id = 3 -- simulation continues
 	MessStr := to_str("Message (id=3): ",p1)
 	machTab.addLogging(MessStr, JobId, MachineIndex, true)
 	~.~.Recording.append(MessStr)
 	-- Message e.g.: Method in line 34: Debug statement encountered.
 
 else
 	MessStr := to_str("Unexpected message (id=",id,"): ",p1)
 	machTab.addLogging(MessStr, JobId, MachineIndex, true)
 	~.~.Recording.append(MessStr)
 end
RandomSeed: 349
UUID: b93eb716-522d-4f63-b05a-fc50f71863f9
$CustomAttributes:
-
 Name: ErrorHandler
 DataType: object
 Value: "ErrorHandler"
